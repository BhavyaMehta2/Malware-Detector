package com.app.permissionextractor;

import android.Manifest;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.util.Log;
import android.widget.FrameLayout;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import java.lang.reflect.Field;
import java.util.ArrayList;

public class PermissionsActivity extends AppCompatActivity {

    static FrameLayout pBar;
    RecyclerView recyclerView;
    ModelRVAdapter adapter;
    static ArrayList<String> permissions;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_permissions_activitiy);

        pBar = findViewById(R.id.progress_overlay);

        recyclerView = findViewById(R.id.rv_models);
        GridLayoutManager recyclerViewLayoutManager = new GridLayoutManager(PermissionsActivity.this, 1);
        recyclerView.setLayoutManager(recyclerViewLayoutManager);
        adapter = new ModelRVAdapter(PermissionsActivity.this, new ModelSelector().GetAllModels());
        recyclerView.setAdapter(adapter);

        permissions = new ArrayList<>();

        String ApplicationPackageName = (String) getIntent().getExtras().get("package");
        PackageManager pm = this.getPackageManager();

        Field[] perm = Manifest.permission.class.getDeclaredFields();
        Field[] permGroups = Manifest.permission_group.class.getDeclaredFields();

        for(Field p:perm)
        {
            int hasPerm;
            try {
                hasPerm = pm.checkPermission((String) p.get(Manifest.permission.class), ApplicationPackageName);
            } catch (IllegalAccessException e) {
                throw new RuntimeException(e);
            }

            if (hasPerm == PackageManager.PERMISSION_GRANTED) {
                permissions.add(p.getName());
            }
        }

        for(Field p:permGroups)
        {
            int hasPerm;
            try {
                hasPerm = pm.checkPermission((String) p.get(Manifest.permission_group.class), ApplicationPackageName);
            } catch (IllegalAccessException e) {
                throw new RuntimeException(e);
            }

            if (hasPerm == PackageManager.PERMISSION_GRANTED) {
                permissions.add(p.getName());
            }
        }

        Log.d("perms", String.valueOf(permissions));
    }
}